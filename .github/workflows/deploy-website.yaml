name: Deploy website

on:
  push:
    branches:
      - main
      - stage

  pull_request:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
  TF_VAR_REGION: ${{ secrets.TF_VAR_REGION }}
  TF_VAR_BUCKET_NAME: ${{ secrets.TF_VAR_BUCKET_NAME }}
  TF_VAR_DYNAMODB_TABLE: ${{ secrets.TF_VAR_DYNAMODB_TABLE }}
  TF_VAR_BUCKET_KEY: ${{ secrets.TF_VAR_BUCKET_KEY }}
  AWS_SSH_KEY_PRIVATE: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
  AWS_SSH_KEY_PUBLIC: ${{ secrets.AWS_SSH_KEY_PUBLIC }}

jobs:
  terraform:
    name: Deploy infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform format
        run: terraform fmt

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$TF_VAR_BUCKET_NAME" -backend-config="dynamodb_table=$TF_VAR_DYNAMODB_TABLE" -backend-config="region=$TF_VAR_REGION"
        working-directory: ./terraform

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: |-
          terraform plan \
          -var="region=us-east-1" \
          -var="public_key=$AWS_SSH_KEY_PUBLIC" \
          -var="private_key=$AWS_SSH_KEY_PRIVATE" \
          -var="key_name=app_auth" \
          -out=PLAN
        working-directory: ./terraform

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve
        if: steps.plan.outcome == 'success' && github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./terraform

      - name: Terraform destroy
        run: terraform destroy -auto-approve
        if: steps.apply.outcome == 'success' && github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./terraform
